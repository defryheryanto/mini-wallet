// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	wallet "github.com/defryheryanto/mini-wallet/internal/wallet"
	mock "github.com/stretchr/testify/mock"
)

// WalletIService is an autogenerated mock type for the WalletIService type
type WalletIService struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, params
func (_m *WalletIService) Create(ctx context.Context, params *wallet.CreateWalletParams) error {
	ret := _m.Called(ctx, params)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *wallet.CreateWalletParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewWalletIService interface {
	mock.TestingT
	Cleanup(func())
}

// NewWalletIService creates a new instance of WalletIService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWalletIService(t mockConstructorTestingTNewWalletIService) *WalletIService {
	mock := &WalletIService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
